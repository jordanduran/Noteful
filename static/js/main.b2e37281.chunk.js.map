{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","NotesContext.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","HandleError.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","NotesContext","createContext","notes","folders","deleteNote","addFolder","addNote","NoteListNav","_this$context","this","context","react_default","a","map","folder","key","id","react_router_dom","to","concat","arguments","length","undefined","folderId","filter","note","parseInt","countNotesForFolder","title","Link","type","react_fontawesome_index_es","icon","Component","contextType","NotePageNav","_this","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","noteId","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","push","catch","error","console","_this$props","name","modified","format","NoteListMain","match","params","notesInFolder","folder_id","log","err","Note_Note_Note","note_name","date_modified","NotePageMain","content","split","para","i","ValiationError","hasError","message","Fragment","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","folderValid","validMessage","_this2","setState","validateFolder","inputValue","errorMsg","trim","_this3","body","JSON","stringify","Error","_this4","handleSubmit","event","addFolderRequest","onSubmit","onChange","updateFolder","target","value","disabled","AddNote","noteName","noteContent","validNoteMessage","validNoteName","validContentMessage","validContent","validFolderMessage","validFolder","datetime","Date","validateNoteName","validateNoteContent","find","valdContent","date","_this5","addNoteRequest","filteredFolders","placeholder","updateNoteName","updateNoteContent","HandleError","App","newNotes","toConsumableArray","window","back","resjson","src_NoteListMain_NoteListMain","getFolders","getNotes","HandleError_HandleError","path","react_router","exact","component","render","routeProps","findNote","NotePageMain_NotePageMain","assign","contextValue","src_NotesContext","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b2e37281.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}","export const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === parseInt(folderId, 10))\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === parseInt(noteId, 10))\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === parseInt(folderId, 10))\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === parseInt(folderId, 10)).length","import React from 'react'\n\nconst NotesContext = React.createContext({\n  notes: [],\n  folders: [],\n  deleteNote: () => {},\n  addFolder: () => {},\n  addNote: () => {}\n})\n\nexport default NotesContext;","import React, {Component} from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport { countNotesForFolder } from '../notes-helpers'\nimport NotesContext from '../NotesContext';\nimport './NoteListNav.css'\n\nclass NoteListNav extends Component {\n  \n  static contextType = NotesContext\n\n  render(){\n    const {notes, folders} = this.context;\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.title}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NoteListNav","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport NotesContext from '../NotesContext'\nimport './NotePageNav.css'\n\nclass NotePageNav extends Component {\n\n  static contextType = NotesContext\n\n  render() {\n    const {folders} = this.context\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folders && (\n          <h3 className='NotePageNav__folder-name'>\n            {folders.title}\n          </h3>\n        )}\n      </div>\n    )\n      }\n}\n\nexport default NotePageNav","export default {\n    API_ENDPOINT: 'https://afternoon-eyrie-12522.herokuapp.com'\n  }","\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NotesContext from '../NotesContext';\n\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = NotesContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\nimport NotesContext from '../NotesContext';\n\nclass NoteListMain extends Component {\n\n  static contextType = NotesContext\n  render(){\n    const {notes} = this.context;\n    const folderId = parseInt(this.props.match.params.folderId, 10)\n    const notesInFolder = notes.filter((note) => \n    {if(folderId){\n     return  note.folder_id === folderId\n    } else{\n      return note\n    }\n  }\n  );\n\n    console.log(notesInFolder);\n    return (\n\n      !this.props.err ?\n\n      <section className='NoteListMain'>\n        <ul>\n          {notesInFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.note_name}\n                modified={note.date_modified}\n                history={this.props.history}\n                match={this.props.match}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n\n      :\n      \n      <h3>{this.props.error}</h3>\n    )\n  }\n}\n\nexport default NoteListMain;","import React from 'react'\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\n\nexport default function NotePageMain(props) {\n  return (\n    <section className='NotePageMain'>\n      <Note\n        id={props.note.id}\n        name={props.note.note_name}\n        modified={props.note.date_modified}\n      />\n      <div className='NotePageMain__content'>\n        {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n    </section>\n  )\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: '',\n  }\n}","import React from 'react';\n\nexport default function ValiationError(props) {\n  if (props.hasError) {\n    return <h3 className=\"error\">{props.message}</h3>\n  }\n  return <></>\n}","import React, { Component } from 'react';\nimport ValiationError from './ValidationError';\nimport NotesContext from '../NotesContext';\n\nexport default class AddFolder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {   \n      name: '',\n      folderValid: false,\n      validMessage: ''\n    }\n  }\n  \n  static contextType = NotesContext;\n\n  updateFolder(name) {\n    this.setState( {name: name}, () => {this.validateFolder(name)} )\n  }\n\n  validateFolder(inputValue) {\n    let errorMsg = this.state.validMessage;\n    let hasError = false;\n\n    inputValue = inputValue.trim();\n    if (inputValue.length === 0) {\n      errorMsg = 'Folder Name is required';\n      hasError = true;\n\n    } else if (inputValue.length < 3) {\n      errorMsg = 'Folder Name must be at least 3 characters';\n      hasError = true;\n\n    } else {\n      errorMsg = '';\n      hasError = false;\n    }\n\n    this.setState({\n      validMessage: errorMsg,\n      folderValid: !hasError\n    })\n\n  }\n\n  addFolderRequest(name, addFolder) {\n    fetch(`https://afternoon-eyrie-12522.herokuapp.com/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({title: name})\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Unable to add folder to database')\n      }\n      return res.json();\n    })\n    .then(res => {\n      addFolder(res);\n      this.props.history.push(\"/\");\n    })\n    .catch(err => console.log(name, err))\n  }\n\n  render() {\n    console.log(this.props)\n\n    const { addFolder } = this.context\n\n    this.handleSubmit = (event) => {\n      event.preventDefault();\n      console.log(addFolder)\n      this.addFolderRequest(this.state.name, addFolder);\n    }\n\n    return (\n      <form onSubmit={ (e) => this.handleSubmit(e) }>\n        <label>Add Folder: \n          <input onChange={ (e) => this.updateFolder(e.target.value) } type=\"text\" name=\"addFolder\" id=\"addFolder\"></input>\n        </label>\n        <ValiationError hasError={!this.state.folderValid} message={this.state.validMessage}/>\n        <button type=\"submit\" disabled={!this.state.folderValid}>Submit</button>\n      </form>\n    )\n  }\n\n}","import React, {Component} from 'react'\n// import { format } from 'date-fns'\nimport NotesContext from '../NotesContext';\n\nexport default class AddNote extends Component {\n  constructor(props) {\n    super(props)\n    this.state ={\n      noteName: '',\n      noteContent: '',\n      folder: '',\n      folderId: '',\n      validNoteMessage: '',\n      validNoteName: false,\n      validContentMessage: '',\n      validContent: false,\n      validFolderMessage: '',\n      validFolder: false,\n      datetime: new Date()\n    }\n  }\n\n  static contextType = NotesContext;\n\n  updateNoteName(name){\n    this.setState({noteName: name}, () => {this.validateNoteName(name)})\n  }\n  \n  updateNoteContent(content){\n    this.setState({noteContent: content}, () => {this.validateNoteContent(content)})\n  }\n\n  updateFolder(name){\n    this.setState({folder: name}, () => {this.validateFolder(name)})\n  }\n\n  validateFolder(name){\n    let errorMsg = this.state.validFolderMessage;\n    let hasError = false;\n    console.log(name)\n    console.log(this.context.folders)\n    if(this.context.folders.find((folder) => folder.title === name) === undefined){\n      errorMsg = 'Please select a valid folder'\n      hasError = true;\n    } else {\n      errorMsg = '';\n      hasError = false;\n    }\n      this.setState({\n        validFolderMessage: errorMsg,\n        validFolder: !hasError\n    })\n  }\n\n  validateNoteName(name){\n    let errorMsg = this.state.validNoteMessage;\n    let hasError = false;\n    name = name.trim();\n    if(name.length < 3){\n      errorMsg = 'Please enter a note name at least 3 characters long';\n      hasError = true;\n    } else {\n      errorMsg = '';\n      hasError = false;\n    }\n    this.setState({\n      validMessage: errorMsg, \n      validNoteName: !hasError\n    })\n  }\n\n  validateNoteContent(content){\n    let errorMsg = this.state.validContentMessage;\n    let hasError = false;\n    content = content.trim();\n    if(content.length < 3){\n      errorMsg = 'Please enter content that is at least 3 characters long';\n      hasError = true;\n    } else {\n      errorMsg = '';\n      hasError = false;\n    }\n    this.setState({\n      validContentMessage: errorMsg,\n      valdContent: !hasError\n    })\n  }\n\n  addNoteRequest(name, content, folderId, date, addNote){\n    fetch('https://afternoon-eyrie-12522.herokuapp.com/notes', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({note_name: name, content: content, date_modified: date, folder_id: folderId})\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Couldn\\'t add note. Sorry!')\n      }\n      return res.json();\n    })\n    .then(res => addNote(res))\n    .catch(err => console.log(err))\n  }\n\n  render(){\n    console.log(this.props)\n\n\n    this.handleSubmit= (event) => {\n    event.preventDefault();\n    console.log(this.state.folder)\n    if (!this.state.folder){\n      this.addNoteRequest(this.state.noteName, this.state.noteContent, this.context.folders[0].id, new Date(), addNote)\n    } else {\n      this.addNoteRequest(this.state.noteName, this.state.noteContent, this.context.folders.find((folder) => folder.title === this.state.folder).id\n    , new Date(), addNote)\n    }\n  }\n\n    const { addNote } = this.context\n\n    const filteredFolders = this.context.folders.map(folder => {\n      console.log(folder);\n      return (\n        <option key={folder.id} value={folder.title}>{folder.title}</option>\n      )\n    })\n    return(\n      <div>\n        <form onSubmit= {(event) => this.handleSubmit(event)}>\n          <label > Note Name\n            <input placeholder = \"Note name\" onChange = {(e) => this.updateNoteName(e.target.value)}></input>\n          </label>\n          <label> Note content\n            <input placeholder = \"Note content\" onChange = {(e) => this.updateNoteContent(e.target.value)}></input>\n          </label>\n          <label> Folder Name\n            <select placeholder = \"Folder name\" onChange = {(e) => \n            this.updateFolder(e.target.value)}>\n            {filteredFolders}\n            </select>\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        {!this.state.validNoteName ? <p>{this.state.validNoteMessage}</p> : <></>}\n        {!this.state.validContent ? <p>{this.state.validContentMessage}</p>: <></>}\n        {!this.state.validFolder ? <p>{this.state.validFolderMessage}</p> : <> </>}\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class HandleError extends React.Component  {\n  state = {hasError: null};\n  static getDerivedStateFromError(error) {\n\n    console.error(error);\n\n    this.setState({hasError: error})\n  }\n  render() {\n    if (this.state.hasError) {\n        return (\n        <main className=\"error-page\">\n          <h1>Something seems to have gone wrong</h1>\n          <p>Try refresing the page</p>\n       </main>\n      )\n    }\n    return this.props.children\n  }\n}","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport NotesContext from '../NotesContext';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport { findNote } from '../notes-helpers';\nimport HandleError from '../HandleError';\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  getFolders() {\n    fetch('https://afternoon-eyrie-12522.herokuapp.com/folders')\n    .then(res => {\n      if(!res.ok) {\n        throw new Error('Opps! Something went wrong')\n      }\n      return res.json()\n    })\n    .then(resjson => this.setState({folders: resjson}))\n    .catch(err => <NoteListMain error={err} />)\n  }\n\n  getNotes() {\n    fetch('https://afternoon-eyrie-12522.herokuapp.com/notes')\n    .then(res => {\n      if(!res.ok) {\n        throw new Error('Oops! Something went wrong')\n      }\n      return res.json()\n    })\n    .then(resjson => this.setState({notes: resjson}))\n    .catch(err => <NoteListMain error={err} />)\n  }\n\n  deleteNote = noteId => {\n    const newNotes = this.state.notes.filter((note) => note.id !== parseInt(noteId, 10));\n    this.setState({notes: newNotes})\n  }\n\n  addFolder = (folder) => {\n    this.setState({folders: [...this.state.folders, folder]})\n  }\n\n  addNote = (note) => {\n    this.setState({notes: [...this.state.notes, note]})\n    window.history.back()\n  }\n\n  componentDidMount() {\n    //fetch 1)folders and 2) notes\n    this.getFolders()\n    this.getNotes()\n  }\n\n  renderNavRoutes() {\n    return (\n      <HandleError>\n      <>\n        {['/Noteful/', '/Noteful/folder/:folderId'].map(path =>\n        \n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n          \n        )}\n        <Route\n          path='/Noteful/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/Noteful/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/Noteful/add-note'\n          component={AddNote}\n        />\n        \n      </>\n        </HandleError>\n      \n    )\n  }\n\n  renderMainRoutes() {\n    const { notes } = this.state\n    return (\n      <HandleError>\n      <>\n        {['/Noteful/', '/Noteful/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/Noteful/note/:noteId'\n          render={routeProps => {\n            const noteId = parseInt(routeProps.match.params.noteId, 10)\n            const note = findNote(notes, noteId)\n            return (\n              <NotePageMain\n                {...routeProps}\n                note={note}\n              />\n            )\n          }}\n        />\n        <Route\n          path='/Noteful/add-folder'       \n        />\n        <Route\n          path='/Noteful/add-note'\n        />\n      </>\n      </HandleError>\n    )\n  }\n\n  render() {\n\n    const contextValue = {\n      folders: this.state.folders,\n      notes: this.state.notes,\n      deleteNote: this.deleteNote,\n      addFolder: this.addFolder,\n      addNote: this.addNote\n    }\n\n    return (\n      <HandleError>\n      <NotesContext.Provider value={contextValue}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </NotesContext.Provider>\n      </HandleError>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\n// import 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)"],"sourceRoot":""}